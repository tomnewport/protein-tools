<html>
<head>
	<title>Exportome Viewer</title>

	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
	<meta name="mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>

	<style>
	body {
		font-family: RobotoDraft, 'Helvetica Neue', Helvetica, Arial;
		margin: 0;
		padding: 0;
		background: rgba(251,255,255,1);
	}
	input{
		font-family: RobotoDraft, 'Helvetica Neue', Helvetica, Arial;
	}
	#overview{
		width: 100%;
		padding: 1em 0;
		background:  #b53939;
	}
	#overview h1{
		color: white;
	}
	.deck{
		width: 80%;
		margin: 0 auto;
	}
	.data_card{
		background-color: rgba(250,250,250,1);
		box-shadow: 0.02em 0.05em 0.3em rgba(0,0,0,0.8);
		border-radius: 0.2em;
		padding: 0em;
		margin: 2em 0;
	}
	.range_selector{
		position: relative;
		width: 100%;
		height: 40px;
	}
	.range_selector .span.container{
		position: relative;
		width: calc(100% - 32px);
		left: 20px;
		height: 4px;
		top: 10px;
	}
	.range_selector .span.container span{
		width: 33.3333%;
		height: 100%;
		color: red;
		float: left;

	}
	.range_selector .span.container span.pre, .range_selector .span.container span.post {
		opacity: 0.3;
	}
	.range_selector .slider{
		cursor: pointer;
		transition: 0.2s transform;
		position: absolute;
		top: -2px;
		width: 8px;
		height: 8px;
		border-radius: 4px;
	}
	.range_selector .slider:hover{
		transform: scale(1.5,1.5);
	}
	.range_selector .slider:active{
		transform: scale(2,2);
	}
	.range_selector .slider.start{
		right: calc(66.666% - 4px);
		
	}
	.range_selector .slider.end{
		left: calc(66.6666% - 4px);
	}
	.range_selector .slider .inner{
		width: 15px;
		height: 30px;
		position: relative;
		background-color: inherit;
		cursor: pointer;
		opacity: 0;
		top: -11px;
	}
	.range_selector .slider.start .inner{
		left: -10px;
	}

	.range_selector .slider.end .inner{
		left: 4px;
	}


	.range_selector input{
		position: absolute;
		display: block;
		background: none;
		border: none;
		outline: none;
		top: 10px;
		width: 40px;
		font-weight: 500;
		transition: 0.6s transform;
		opacity: 0.6;
		text-decoration: none;
	}
	.range_selector input:hover{
		opacity: 1;
		text-decoration: underline;
	}
	.range_selector input:focus{
		opacity: 1;
		font-weight: 900;
	}
	.range_selector input.label.start{
		right: 66.66%;
		text-align: right;
	}
	.range_selector input.label.end{
		left: 66.66%;
	}

	</style>

	<link href='https://fonts.googleapis.com/css?family=RobotoDraft:300,400,500,700,400italic' rel='stylesheet' type='text/css'>

	<link rel="shortcut icon" href="">

</head>

<body>

	<div id="protein" data-select-feature="0-0" data-aalength="1000">
		<div id="overview">
			<div class="deck">
				<h1>A Protein</h1>

				<div class="graphic" data-view="box" data-source="protein-domains">(Domains)</div>

				<div class="range_selector"
				id = "rs_view"
				data-min=		"0" 
				data-max=		"1000" 
				data-start=	"100" 
				data-int= "true"
				data-end=	"900"
				data-color=			"white">

			</div>

		</div>
	</div>
	<div id="inspect">
		<div class="deck">
			<div class="data_card">
				<h2>SH3 Domain</h2>
				<div class="range_selector"
				id = "rs_sele"
				data-min=		"0" 
				data-max=		"1000" 
				data-start=	"100" 
				data-end=	"900"
				data-int= "true"
				data-color=         "black">

			</div>
			<div class="graphic" data-view="box" data-source="protein-domains">Domain Plot</div>
			<button>Box</button>
			<div class="graphic" data-view="box" data-source="protein-domains">Amino Acid Sequence</div>
			<button>Complexity</button>
		</div>
	</div>
</div>
<script>
function slider_new(){
	rs_elements = $(".range_selector");
	rs_elements.each( function(id, slider_container_DOM){
		slider_container = $(slider_container_DOM);
		slider_color = slider_container.data("color");

		slider_span = 	$("	<div class='span container'></div>");
		slider_pre  = $("<span class='pre'></span>");
		slider_mid  = $("<span class='mid'></span>");
		slider_post = $("<span class='post'></span>");

		slider_pre.css('background-color', slider_color);
		slider_mid.css('background-color', slider_color);
		slider_post.css('background-color', slider_color);

		slider_start = 	$("<div class='slider start'><div class='inner'></div></div>");
		slider_end = 	$("<div class='slider end'><div class='inner'></div></div>");

		slider_start.css('background-color', slider_color);
		slider_end.css('background-color', slider_color);

		label_start = 	$("<input class='label start' value ='10'/>");
		label_end = 	$("<input class='label end' value = '20'/>");

		label_start.css('color', slider_color);
		label_end.css('color', slider_color);

		slider_span.append(slider_pre, slider_mid, slider_post, slider_start, slider_end, label_start, label_end);

		slider_container.append(slider_span);

		slider_container.data('start_handle', slider_start );
		slider_container.data('end_handle'  , slider_end );
		slider_container.data('start_label' , label_start );
		slider_container.data('end_label'   , label_end );
		slider_container.data('pre_span'    , slider_pre  );
		slider_container.data('mid_span'    , slider_mid  );
		slider_container.data('post_span'   , slider_post );

		slider_start.data(	'parent', slider_container);
		slider_end.data(	'parent', slider_container);
		label_start.data(	'parent', slider_container);
		label_end.data(		'parent', slider_container);
		slider_pre.data(	'parent', slider_container);
		slider_mid.data(	'parent', slider_container);
		slider_post.data(	'parent', slider_container);

				label_start.change( function(e){
					tgt = $(e.target).data('parent');
					v = parseInt($(e.target).val());
					tgt.data('start', v);
					tgt.attr('data-start', v);
					slider_update( tgt );
				});

				label_end.change( function(e){
					tgt = $(e.target).data('parent');
					v = parseInt($(e.target).val());
					tgt.data('end', v);
					tgt.attr('data-end', v);
					slider_update( tgt );
				});

				//0 = no drag, 1 = start, 2 = end
				slider_container.data('dragmode', 0);

				//Change drag mode:
				slider_start.mousedown(function(e){
					active = $(e.currentTarget).data('parent');
					active.data('dragmode', 1);
				});
				slider_start.mouseup(function(e){
					active = $(e.currentTarget).data('parent');
					active.data('dragmode', 0);
				});
				slider_end.mousedown(function(e){
					active = $(e.currentTarget).data('parent');
					active.data('dragmode', 2);
				});
				slider_end.mouseup(function(e){
					active = $(e.currentTarget).data('parent');
					active.data('dragmode', 0);
				});

				slider_container.mouseleave(function(e){
					active = $(e.currentTarget);
					active.data('dragmode', 0);
				});

				slider_container.mousemove(function(e){
					tgt = $(e.currentTarget);
					if (tgt.data('dragmode') != 0){
						
						cx = e.clientX;
						tx = tgt.find('.span.container').offset().left;
						tw = tgt.find('.span.container').innerWidth();
						rp = Math.max(0, Math.min((cx - tx)/tw, 1));

						smin = tgt.data('min');
						smax = tgt.data('max');
						aap = smin + (rp * (smax - smin));

						if (tgt.data('int') == true){
							aap = Math.round(aap);
						}
						if (tgt.data('dragmode') == 1){
							tgt.data('start', aap);
							tgt.attr('data-start', aap);
						} else {
							tgt.data('end', aap);
							tgt.attr('data-end', aap);

						}
						slider_update( tgt );
					}
				});
				slider_update( slider_container );
			});
		}
		function slider_update(slider){
			//Update Slider
			if (slider.data('end') < slider.data('start')){
				slider.data('end', slider.data('start') + 1);
				slider.attr('data-end', slider.data('start') + 1);
				slider.data('start', slider.data('end') - 2);
				slider.attr('data-start', slider.data('end') - 2);
			}
			if (slider.data('max') < slider.data('end')){
				slider.data('end', slider.data('max'));
				slider.attr('data-end', slider.data('max'));
			}
			if (slider.data('min') > slider.data('start')){
				slider.data('start', slider.data('min'));
				slider.attr('data-start', slider.data('min'));
			}
			smax = slider.data('max');
			smin = slider.data('min');
			sstart = slider.data('start');
			send = slider.data('end');

			slider.data('start_label').val(sstart);
			slider.data('end_label').val(send);
			//Move labels
			start_perc = 100 * ((sstart - smin) / (smax - smin));
			end_perc = 100 * ((send - smin) / (smax - smin));
			slider.data('start_handle').css('right', 'calc('+(100-start_perc)+'% - 4px)');
			slider.data('end_handle').css('left', 'calc('+end_perc+'% - 4px)');
			slider.data('start_label').css('right', (100-start_perc)+'%');
			slider.data('end_label').css('left', end_perc+'%');

			slider.data('pre_span').css('width', start_perc + '%');
			slider.data('mid_span').css('width', (end_perc - start_perc) + '%');
			slider.data('post_span').css('width', (100 - end_perc) + '%');

			slider.trigger( "update" );

		}
		$( document ).ready(function() {
			slider_new();
			view_slider = $('#rs_view');
			select_slider = $('#rs_sele');
			view_slider.on('update',function(){
				select_slider.data('max', view_slider.data('end'));
				select_slider.data('min', view_slider.data('start'));
				slider_update(select_slider);
			});
		});

		</script>
	</body>
	</html>